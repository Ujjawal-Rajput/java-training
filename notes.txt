4/10/24 friday : 
work on idea which solves a problem. examples- startsups, flipkart, realtime note pad.
valid words leetcode problem
bill structure using locale.

===============================================================
9/10/24 wednesday : 
locale revisiom. IMP : locale.getDefault(); default it is en_US.
factorial program
solve java locale questions on hacker rank = 13 questions minimum.
power of n
isarmstrong

singleton = a class can only have single object
if there are 2 classes without public then, 2 .class files will generate along with their individual class names.
objects always store at heap memory.
initially, objects will have null for strings, 0 for integers when just created.
class variables are called instance variables
this keyword in classes, this = current calling object's name
objects of a classes store their values on different memory locations. (independent of each other)
use "private/ protected" keyword before constructor to prevent more than one object instantiation.
make a different function inside class to check whether there is already a object present.
    eg. static car objcreate(name, doorcount){
        if (obj == null){
            obj = new car(name, doorcount);
        }
        return obj;
    }
we can't create object using new keyword because constructor is private/ protected.
numberformat and date -> follow singleton so that no one can change things in between -> like dollar to rupees.

======================================================================================================
15/10/24 wednesday : 
.env = contain secret paths, tokens,
jwt
resource bundle
bill using resource bundle 
star patterns
bank system - hw
6 patterns - hw

======================================================================================================
18/10/24 friday : 
stack with sum1, sum2, sum3 example
gave patterns(using recursion) in hw
add resource bundle in bank system
recursion = base case, small problem, increase/ decrease, call stack;
thread->jre->jvm->main->sum1->sum2->sum3->return 0
show call stack on paper - hw
5 4 3 2 1 using recursion

====================================================================================================
formula for rotation [right-part * 10^(l-r)] + left-part 

given a number, sort the number in ascending and descending, if (descending-ascending)*2 = 6174, print KAP'S satisfied
run loop till 2*output's becomes 6174 or difference becomes itself. DONE


automorphic, n=5, n^2 = 25, last digit is common. DONE
n=19, 1^2 + 9^2 = 82 = 8^2 + 2^2 = 68, and so on, if gets 1, print answer. condition : when becomes 1 && len(19) + 1 < getnumber -> stop = happy number DONE
KEITH -> n=197 -> 1,9,7,17,33,57,107,197 -> if (getnumber == n) yes
condition : getnumber should not exceed && 

============================================================================================
SPRING BOOT INTRO
1. frame and panel will always be there in java application
2. frame : window , panel: content inside that window


============================================================================================
1. add image in panel 
2. bounce the image from (0,0) to (500, 500)
3. bounce image when collide with frame-wall.

============================================================================================
25/oct/2024
class missed.

============================================================================================
8/nov/2024
1. instance variable are the variables that are initialized inside a class.
2. DRY - DON'T REPEAT YOURSELF
3. make complete game (will check on 13 nov/ wednesday) - write collision logic, different speeds, make array for storing car objects, use resource bundle for values for storing width and height.
4. make the code clean because anybody can modify our code. eg. setVisibility(false),
5. dont use chatgpt
6. do those 4 questions DONE

============================================================================================
last class content:
1. crud opertions on array with logging array content in .txt file.
2. leetcode question isSubsequence 392

============================================================================================
27/nov/2024
1. solve leetcode 283
2. obj.toString() = it'll return "className@hashCode", can overRide by defining it explicitly in class
3. toString() always called bts
4. obj1 == obj2 false (different reference location of objects)
5. obj1.name == obj2.name  where name = "abcd" => false (different reference location of strings)
6. 2 main functions can be used in a program => through overloading
7. polymorphism => Animal a = new Animal();
                   Animal b = new Dog();
8. polymorphism was used in paintComponent function where it calls super.paintComponent(pen).
9. leetcode 121


my classmaker score : 81.something %